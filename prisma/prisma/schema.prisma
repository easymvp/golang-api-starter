datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgvector(map: "vector")] // Add the pgvector extension
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "postgresqlExtensions"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

model User {
  id             String     @id @default(cuid()) @map("id")
  workspaceId    String     @map("workspace_id") @db.VarChar(36)
  username       String     @unique @map("username") @db.VarChar(128)
  email          String     @map("email") @db.VarChar(128)
  fullName       String     @map("full_name") @db.VarChar(128)
  salt           String     @map("salt") @db.VarChar(64)
  iteration      Int        @map("iteration")
  hashedPassword String     @map("hashed_password") @db.VarChar(128)
  imageUrl       String?    @map("image_url") @db.VarChar(512)
  role           UserRole   @map("role")
  status         UserStatus @map("status")
  deletedAt      DateTime?  @map("deleted_at")
  createdAt      DateTime   @default(now()) @map("created_at")
  updatedAt      DateTime   @updatedAt @map("updated_at")

  @@map("user")
}

enum UserRole {
  user       @map("USER")
  admin      @map("ADMIN")
  superadmin @map("SUPER_ADMIN")
}

enum UserStatus {
  active     @map("ACTIVE")
  inactive   @map("INACTIVE")
  unverified @map("UNVERIFIED")
}
